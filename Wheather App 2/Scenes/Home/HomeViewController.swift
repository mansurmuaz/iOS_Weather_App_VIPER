//
//  HomeViewController.swift
//  Wheather App 2
//
//  Created by Mansur Muaz  Ekici on 16.07.2018.
//  Copyright (c) 2018 Adesso. All rights reserved.
//
//  Template generated by Zafer Caliskan
//

import UIKit
import CoreLocation
import CoreData

class HomeViewController: BaseViewController {
    
    // MARK: - Outlets
    
    @IBOutlet weak var cityLabel: UILabel!
    @IBOutlet weak var degreeLabel: UILabel!
    @IBOutlet weak var unitLabel: UILabel!
    @IBOutlet weak var weatherLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var windLabel: UILabel!
    @IBOutlet weak var humidityLabel: UILabel!
    
    @IBOutlet weak var backgroundImageView: UIImageView!
    @IBOutlet weak var windImageView: UIImageView!
    @IBOutlet weak var humidityImageView: UIImageView!
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var searchBar: UISearchBar!
    // MARK: - Dependencies
    
    var presenter: HomePresenterViewProtocol!
    
    var lat = 0.0
    var lon = 0.0
    
    lazy var refreshControl: UIRefreshControl = {
        let refreshControl = UIRefreshControl()
        refreshControl.addTarget(self, action: #selector(handleRefresh(_:)), for: UIControlEvents.valueChanged)
        refreshControl.tintColor = UIColor.white
        
        return refreshControl
    }()
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()

        requestLocation()
        self.tableView.addSubview(self.refreshControl)

        showPopUpRating()
    
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        if lat != 0.0 && lon != 0.0 {
            presenter.getCurrrentWeather(lat: lat, lon: lon)
        }
        presenter.getBookmarks()
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        self.navigationItem.setRightBarButton(UIBarButtonItem(barButtonSystemItem: .add, target: self, action: #selector(displayAddBookmarkView)), animated: true)
        
        self.navigationItem.setLeftBarButton(UIBarButtonItem(image: #imageLiteral(resourceName: "settings"), style: .done, target: self, action: #selector(displaySettingsView)), animated: true)
        
        self.cityLabel.text = ""
        self.degreeLabel.text = ""
        self.weatherLabel.text = ""
        self.descriptionLabel.text = ""
        self.unitLabel.text = ""
        self.windLabel.text = ""
        self.humidityLabel.text = ""
        self.windImageView.alpha = 0
        self.humidityImageView.alpha = 0
    }
    
    // MARK: - Initialization
    let locationManager: CLLocationManager = CLLocationManager()
    
    func showPopUpRating() {
        
        DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(2), execute: {
            let ratingViewController = RatingPopUpViewController()
            ratingViewController.ratingDelegate = self
            ratingViewController.modalPresentationStyle = .overCurrentContext
            ratingViewController.modalTransitionStyle = .crossDissolve
            self.present(ratingViewController, animated: true, completion: nil)
        })
    }
    
    func requestLocation() {
        locationManager.requestWhenInUseAuthorization()
        if CLLocationManager.locationServicesEnabled() {
            locationManager.delegate = self
            locationManager.desiredAccuracy = kCLLocationAccuracyBest
            locationManager.startUpdatingLocation()
        }
    }
        
    // MARK: - Actions

    @objc func displayAddBookmarkView() {
        
        if let navigationController = self.navigationController {
            AddBookmarkWireframe().show(transitionType: .push(navigationController: navigationController), extras: nil)
        }
    }
    
    @objc func displaySettingsView() {
        
        if let navigationController = self.navigationController {
            let sVC = UIStoryboard.init(name: "Home", bundle: Bundle.main).instantiateViewController(withIdentifier: "SettingsViewController")
            if let settingsVC = sVC as? SettingsViewController {
                navigationController.pushViewController(settingsVC, animated: true)
            }
        }
    }
    
    @objc func handleRefresh(_ refreshControl: UIRefreshControl) {
        searchBar.text = ""
        presenter.getBookmarks()
        refreshControl.endRefreshing()
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super.touchesBegan(touches, with: event)
        self.view.endEditing(true)
    }
}

// MARK: - Extensions

extension HomeViewController: CLLocationManagerDelegate {
    
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        if let location = locations.first {
            lon = location.coordinate.longitude
            lat = location.coordinate.latitude
        
            presenter.getCurrrentWeather(lat: lat, lon: lon)
            manager.stopUpdatingLocation()
        }
    }
}

// MARK: - Protocol Implemantations

extension HomeViewController: HomeViewControllerProtocol {
    
    func setCurrentWeatherLabel(currentWeather: WeatherModel) {
        
        self.cityLabel.text = currentWeather.name
        self.degreeLabel.text = currentWeather.degree.description
        self.weatherLabel.text = currentWeather.weather
        self.descriptionLabel.text = currentWeather.description.capitalized
        self.unitLabel.text = currentWeather.unit
        self.windLabel.text = currentWeather.wind.description
        self.humidityLabel.text = currentWeather.humidity.description
        self.windImageView.alpha = 1
        self.humidityImageView.alpha = 1
        
        UIView.transition(with: self.backgroundImageView,
                          duration: 1,
                          options: .transitionCrossDissolve,
                          animations: {self.backgroundImageView.image = currentWeather.image },
                          completion: nil)
    }
    
    func reloadTableView() {
        tableView.reloadData()
    }
    
    func deleteTableRow(indexPaths: [IndexPath]) {
        tableView.deleteRows(at: indexPaths, with: .fade)
    }
    
}

extension HomeViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return presenter.getBookmarksCount()
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        
        if let weather = presenter.getBookmarkAt(index: indexPath.row) {
            if weather.name != "" {
                cell.textLabel?.text = weather.name
            } else {
                cell.textLabel?.text = "Unknown Location"
            }
            cell.detailTextLabel?.text = "\(weather.degree.description)\(weather.unit.description)"
        }
        return cell
    }

    func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            presenter.deleteBookmark(index: indexPath.row)
        }
    }

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if let wheather = presenter.getBookmarkAt(index: indexPath.row) {
            if let location = presenter.getLocationAt(index: indexPath.row) {
                let extras = DetailsExtras(location, wheather)
                if let navigationController = self.navigationController {
                    DetailsWireframe().show(transitionType: .push(navigationController: navigationController), extras: extras)
                }
            }
        }
    }
}

extension HomeViewController: UISearchBarDelegate {
    
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        presenter.filterBookmarks(searchText: searchText)
    }
    
    func searchBarSearchButtonClicked(_ searchBar: UISearchBar) {
        searchBar.resignFirstResponder()
    }
}

extension HomeViewController: RatingPopUpViewControllerDelegate {
    
    func didTapSendButton(rating: Int) {
        print(rating)
    }
}
