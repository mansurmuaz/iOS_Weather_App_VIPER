//
//  HomeViewController.swift
//  Wheather App 2
//
//  Created by Mansur Muaz  Ekici on 16.07.2018.
//  Copyright (c) 2018 Adesso. All rights reserved.
//
//  Template generated by Zafer Caliskan
//

import UIKit
import CoreLocation

class HomeViewController: BaseViewController {
    
    // MARK: - Outlets
    
    @IBOutlet weak var cityLabel: UILabel!
    @IBOutlet weak var degreeLabel: UILabel!
    @IBOutlet weak var unitLabel: UILabel!
    @IBOutlet weak var weatherLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var windLabel: UILabel!
    @IBOutlet weak var humidityLabel: UILabel!
    
    @IBOutlet weak var backgroundImageView: UIImageView!
    @IBOutlet weak var windImageView: UIImageView!
    @IBOutlet weak var humidityImageView: UIImageView!
    
    // MARK: - Dependencies
    
    var presenter: HomePresenterViewProtocol!
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        UserDefaults.standard.set("metric", forKey: "unit")
        
        requestLocation()
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        self.navigationItem.setRightBarButton(UIBarButtonItem(barButtonSystemItem: .add, target: self, action: #selector(displayAddBookmarkView)), animated: true)
        
        self.cityLabel.text = ""
        self.degreeLabel.text = ""
        self.weatherLabel.text = ""
        self.descriptionLabel.text = ""
        self.unitLabel.text = ""
        self.windLabel.text = ""
        self.humidityLabel.text = ""
        self.windImageView.alpha = 0
        self.humidityImageView.alpha = 0
    }
    
    // MARK: - Initialization
    let locationManager: CLLocationManager = CLLocationManager()
    
    func requestLocation() {
        locationManager.requestWhenInUseAuthorization()
        if CLLocationManager.locationServicesEnabled() {
            locationManager.delegate = self
            locationManager.desiredAccuracy = kCLLocationAccuracyBest
            locationManager.startUpdatingLocation()
        }
    }
    
    @objc func displayAddBookmarkView() {
        
        if let navigationController = self.navigationController {
            
            AddBookmarkWireframe().show(transitionType: .push(navigationController: navigationController), extras: nil)
        }
    }
    // MARK: - Actions

}

// MARK: - Extensions

extension HomeViewController: CLLocationManagerDelegate {
    
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        if let location = locations.first {
            let lon = location.coordinate.longitude
            let lat = location.coordinate.latitude
        
            presenter.getCurrrentWeather(lat: lat, lon: lon)
            manager.stopUpdatingLocation()
        }
    }
}

// MARK: - Protocol Implemantations

extension HomeViewController: HomeViewControllerProtocol {
    
    func setCurrentWeatherLabel(currentWeather: WeatherModel) {
        
        self.cityLabel.text = currentWeather.name
        self.degreeLabel.text = currentWeather.degree.description
        self.weatherLabel.text = currentWeather.weather
        self.descriptionLabel.text = currentWeather.description.capitalized
        self.unitLabel.text = currentWeather.unit
        self.windLabel.text = currentWeather.wind.description
        self.humidityLabel.text = currentWeather.humidity.description
        self.windImageView.alpha = 1
        self.humidityImageView.alpha = 1
    }
}
