//
//  DetailsPresenter.swift
//  Wheather App 2
//
//  Created by Mansur Muaz  Ekici on 17.07.2018.
//  Copyright (c) 2018 Adesso. All rights reserved.
//
//  Template generated by Zafer Caliskan
//

import Foundation

class DetailsPresenter: BasePresenter {
    
    // MARK: - Dependencies
    
    fileprivate var viewController: DetailsViewControllerProtocol!
    fileprivate var interactor: DetailsInteractorProtocol!
    fileprivate weak var delegate: DetailsPresenterDelegateProtocol?
    
    // MARK: - Extras
    
    var location: Location?
    var currentWeather: WeatherModel?
    
    // MARK: - Properties
    
    var fiveDaysWeathers = [WeatherModel]()
    
    // MARK: - Initialization
    
    init(viewController: DetailsViewControllerProtocol, interactor: DetailsInteractorProtocol, delegate: DetailsPresenterDelegateProtocol?, extras: DetailsExtras) {
        self.viewController = viewController
        self.interactor = interactor
        self.delegate = delegate
        
        // Store extras
        self.location = extras.location
        self.currentWeather = extras.weather
    }
    
    // MARK: - Business Logic
    
}

// MARK: - Extensions

// MARK: - Protocols Implemantations

// MARK: View Protocol

extension DetailsPresenter: DetailsPresenterViewProtocol {
    
    func formatDate(dateString: String) -> String? {
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "yyyy-mm-dd"
        dateFormatter.timeZone = TimeZone.current
        if let date = dateFormatter.date(from: dateString) {
            dateFormatter.dateFormat = "EEEE, MMM d"
            
            return dateFormatter.string(from: date)
        }
        return nil
    }
    
    func getWeatherAt(index: Int) -> WeatherModel? {
        
        if index <= fiveDaysWeathers.count {
            return fiveDaysWeathers[index]
        }
        return nil
    }
    
    func getWeathersCount() -> Int {
        return fiveDaysWeathers.count
    }
    
    func getFiveDaysWeather() {
        if let location = location {
            interactor.fetchFiveDaysWeather(location: location)
        }
    }
    
    func getCurrentWeather() -> WeatherModel? {
        return currentWeather
    }
}

// MARK: Interactor Protocol

extension DetailsPresenter: DetailsPresenterInteractorProtocol {
    
    func setWeatherArray(weathers: [WeatherModel]) {
        fiveDaysWeathers = weathers
        viewController.reloadTableView()
    }
}

// MARK: Delegate Protocol
